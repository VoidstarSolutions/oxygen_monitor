---
:project:
  :use_exceptions: FALSE
  :use_test_preprocessor: TRUE
  :use_auxiliary_dependencies: TRUE
  :use_deep_dependencies: TRUE
  :build_root: build
  :release_build: TRUE
  :test_file_prefix: test_
  :which_ceedling: vendor/ceedling
  :default_tasks:
    - test:all

#:test_build:
#  :use_assembly: TRUE

:release_build:
  :output: oxygen_monitor.out
  :use_assembly: TRUE

:environment:

:extension:
  :executable: .out

:paths:
  :test:
    - +:test/**
    - -:test/support
  :source:
    - src/**
  :support:
    - test/support

:defines:
  :common: &common_defines
    - __SAMC21E18A__
  :test:
    - *common_defines
    - __TEST
  :test_preprocess:
    - *common_defines
    - __TEST
  :release:
    - *common_defines

:cmock:
  :mock_prefix: mock_
  :when_no_prototypes: :warn
  :enforce_strict_ordering: TRUE
  :includes:
    - FreeRTOS.h
  :plugins:
    - :ignore
    - :callback
  :treat_as:
    uint8: HEX8
    uint16: HEX16
    uint32: UINT32
    int8: INT8
    bool: UINT8

# Add -gcov to the plugins list to make sure of the gcov plugin
# You will need to have gcov and gcovr both installed to make it work.
# For more information on these options, see docs in plugins/gcov
:gcov:
  :html_report: TRUE
  :html_report_type: detailed
  :html_medium_threshold: 75
  :html_high_threshold: 90
  :xml_report: FALSE

:tools:
  :test_compiler:
    :executable: gcc
    :arguments:
      - -g
      - -Wall
      - -Wno-address
      - -I"$": COLLECTION_PATHS_TEST_SUPPORT_SOURCE_INCLUDE_VENDOR
      - -D$: COLLECTION_DEFINES_TEST_AND_VENDOR
      - -c ${1}
      - -o ${2}
  :test_linker:
    :executable: gcc
    :arguments:
      - ${1}
      - -o ${2}
  :release_compiler:
    :executable: arm-none-eabi-gcc
    :arguments:
      - -g
      - -mcpu=cortex-m0plus
      - -mthumb
      - -Wall
      - -std=c99
      - -I"$": COLLECTION_PATHS_SOURCE_AND_INCLUDE
      - -D$: DEFINES_RELEASE
      - -c ${1}
      - -o ${2}
  :release_linker:
    :executable: arm-none-eabi-gcc
    :arguments:
      - --specs=nosys.specs
      - -T src/samc21/gcc/gcc/samc21e18a_flash.ld
      - -Xlinker -Map=build/release/output.map
      - ${1}
      - -o ${2}
  :release_assembler:
    :executable: arm-none-eabi-as
    :arguments:
      - ${1}
      - -o ${2}

# LIBRARIES
# These libraries are automatically injected into the build process. Those specified as
# common will be used in all types of builds. Otherwise, libraries can be injected in just
# tests or releases. These options are MERGED with the options in supplemental yaml files.
:libraries:
  :placement: :end
  :flag: "${1}" # or "-L ${1}" for example
  :test: []
  :release: []

:plugins:
  :load_paths:
    - vendor/ceedling/plugins
  :enabled:
    - stdout_pretty_tests_report
    - module_generator
    - raw_output_report
    - gcov
